{
    "haskell.plugin.changeTypeSignature.globalOn": true,
    "haskell.plugin.ghcide-type-lenses.globalOn": false,
    "haskell.plugin.ghcide-type-lenses.config.mode": "always",
    "haskell.plugin.ghcide-code-actions-type-signatures.globalOn": true,
    "haskell.plugin.alternateNumberFormat.globalOn": true,
    "haskell.plugin.cabal.globalOn": true,
    "haskell.plugin.callHierarchy.globalOn": true,
    "haskell.plugin.class.codeLensOn": false,
    "haskell.plugin.class.codeActionsOn": true,
    "haskell.plugin.eval.config.diff": true,
    "haskell.plugin.explicit-fields.globalOn": true,
    "haskell.plugin.eval.globalOn": true,
    "haskell.plugin.explicit-fixity.globalOn": true,
    "haskell.plugin.fourmolu.config.external": true,
    "haskell.plugin.gadt.globalOn": true,
    "haskell.plugin.ghcide-code-actions-bindings.globalOn": true,
    "haskell.plugin.ghcide-code-actions-imports-exports.globalOn": true,
    "haskell.plugin.ghcide-code-actions-fill-holes.globalOn": true,
    "haskell.plugin.ghcide-completions.config.snippetsOn": true,
    "haskell.plugin.ghcide-completions.config.autoExtendOn": true,
    "haskell.plugin.ghcide-completions.globalOn": true,
    "haskell.plugin.ghcide-hover-and-symbols.hoverOn": true,
    "haskell.plugin.ghcide-hover-and-symbols.symbolsOn": true,
    "haskell.plugin.hlint.codeActionsOn": true,
    "haskell.plugin.haddockComments.globalOn": true,
    "haskell.plugin.importLens.codeActionsOn": true,
    "haskell.plugin.hlint.diagnosticsOn": true,
    "haskell.plugin.importLens.codeLensOn": false,
    "haskell.plugin.moduleName.globalOn": true,
    "haskell.plugin.pragmas.codeActionsOn": true,
    "haskell.plugin.pragmas.completionOn": true,
    "haskell.plugin.qualifyImportedNames.globalOn": true,
    "haskell.plugin.refineImports.codeActionsOn": true,
    "haskell.plugin.refineImports.codeLensOn": true,
    "haskell.plugin.retrie.globalOn": true,
    "haskell.plugin.splice.globalOn": true,
    "haskell.plugin.rename.globalOn": true,
    "haskell.plugin.tactics.codeActionsOn": true,
    "haskell.plugin.tactics.codeLensOn": true,
    "haskell.plugin.eval.config.exception": true,
    "haskell.openSourceInHackage": true,
    "haskell.openDocumentationInHackage": true,
    "haskell.plugin.rename.config.crossModule": true
}